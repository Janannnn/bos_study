<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!--配置shiro核心Filter-->
	<bean id="shiroFilter"
		  class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!--安全管理器-->
		<property name="securityManager" ref="securityManage"/>
		<!-- 未认证，跳转到的页面  -->
		<property name="loginUrl" value="/login.html" />
		<!-- 认证成功统一跳转到的页面,shiro认证成功自动到上一个请求路径-->
		<property name="successUrl" value="/index.html" />
		<!-- 认证后，没有权限跳转到的页面 -->
		<property name="unauthorizedUrl" value="/unauthorized.html" />
		<!-- shiro URL控制过滤器规则  -->
		<property name="filterChainDefinitions">
			<value>
				/login.html* = anon
				/user_login.action* = anon
				/validatecode.jsp* = anon
				/css/** = anon
				/js/** = anon
				/images/** = anon
				/services/** = anon
				/pages/base/courier2.html* = perms[courier:list]
				/pages/base/area.html* = roles[system]
				/** = authc
			</value>
		</property>
	</bean>
	<!--配置realm，为了注入缓存-->
	<bean id="bosRealm" class="cn.itcast.bos.realm.BosRealm">
		<!--
		value:缓存区的名字就是ehcache.xml自定义cache的name
		name:对那种数据进行缓存（认证？授权？）此处为授权
		猜想：shiro利用securityManage自动根据subject用户在缓存区区分用户的数据缓存
		-->
		<property name="authorizationCacheName" value="bos"/>
	</bean>
	<!--shiro整合ehcache-->
	<!--配置 shiro 封装缓存管理器-->
	<bean id="ehCacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManager" ref="cacheManager"/>
	</bean>
	<!--配置安全管理器-->
	<bean id="securityManage" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<!--注入自定义realm实现与安全数据交互-->
		<property name="realm" ref="bosRealm"/>
		<!--注入缓存管理器-->
		<property name="cacheManager" ref="ehCacheManager"/>
	</bean>

	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
	<!--开启shiro注解模式-->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
		  depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true"/>
	</bean>
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManage"/>
	</bean>
</beans>
